apiVersion: apps/v1 # API-versie: apps/v1 is nodig voor de DaemonSet resource
kind: DaemonSet # Type Kubernetes object is een DaemonSet draait op elke node
metadata:
  name: wazuh-agent # Naam van de DaemonSet is 'wazuh-agent'
  namespace: monitoring # DaemonSet in de 'monitoring' namespace, houdt overzichtelijk
spec:
  selector:
    matchLabels:
      app: wazuh-agent # Selector kijkt naar Pods met label app=wazuh-agent om bij deze DaemonSet te horen
  template:
    metadata:
      labels:
        app: wazuh-agent # Pods die door deze DaemonSet worden gemaakt krijgen label app=wazuh-agent
    spec:
      serviceAccountName: wazuh-agent-sa # Pod gebruikt serviceAccount wazuh-agent-sa, voor RBAC toegangen indien nodig
      tolerations:
        - key: "node-role.kubernetes.io/master"
          effect: NoSchedule # Staat toe dat Pods ook op master nodes kunnen draaien (of niet), afhankelijk van node-taints
      # De pod moet op alle nodes draaien daarom een daemonset: zo krijg je op elke node een agent-pod
      containers:
        - name: wazuh-agent # Naam van de container in de Pod is wazuh-agent
          image: kennyopennix/wazuh-agent:latest # De Docker image van de Wazuh-agent.
          securityContext:
            runAsUser: 0                # Draai als user root (0), nodig om hostbestanden (bijv. /etc, /var/log) te kunnen lezen
            privileged: false           # Niet per se privileged; indien niet nodig, beter op false houden
          volumeMounts:
            - name: host-etc
              mountPath: /host/etc
              readOnly: true            # Mount /etc van de host read-only in /host/etc in de container, agent kan bestanden lezen
            - name: host-var-log
              mountPath: /host/var/log
              readOnly: true            # Mount /var/log van de host read-only in /host/var/log, om logs in te zien
            - name: wazuh-agent-config
              mountPath: /var/ossec/etc
              readOnly: true            # Mount de wazuh-agent-config ConfigMap op /var/ossec/etc, agent leest hier zijn config
          env:
            - name: WAZUH_MANAGER
              value: "wazuh-cluster.wazuh.svc.cluster.local" # Omgevingsvariabele met de naam of IP van de Wazuh-manager, zodat de agent weet waarheen te sturen
            # eventueel meer env vars voor auth keys of andere settings
      hostNetwork: false                # hostNetwork op false, betekent dat Pod eigen netwerknamespace krijgt, niet die van de host
      volumes:
        - name: host-etc
          hostPath:
            path: /etc                  # hostPath volume: /etc van de host, zodat agent deze kan inspecteren
        - name: host-var-log
          hostPath:
            path: /var/log             # hostPath volume: /var/log van de host, agent inspecteert logs
        - name: wazuh-agent-config
          configMap:
            name: wazuh-agent-config   # ConfigMap met ossec.conf van de agent, zorgt voor juiste agentconfig zonder image rebuild
  updateStrategy:
    type: RollingUpdate                # Bij updates wordt RollingUpdate gebruikt: Pods worden netjes vernieuwd zonder downtime
